// Next
import type { NextPage, GetStaticProps } from 'next';
import Head from 'next/head';
import Image from 'next/image';

// axios
import axios from 'axios';

// UUID
import { v4 as uuidv4 } from 'uuid';

// Components
import ParkPageNav from '../../components/ParkPageNav';
import ParkInfoSection from '../../components/ParkInfoSection';
import ParkHours from '../../components/ParkSections/ParkHours';
import Activities from '../../components/ParkSections/Activities';
import Map from '../../components/Map';
import Contact from '../../components/ParkSections/Contact';
import Photos from '../../components/ParkSections/Photos';

// Custom Types
import { IParkDataResponse, IParkData } from '../../customTypes/parks';

interface IProps {
  parkData: IParkData;
  googleMapsKey: string;
}

const ParkPage: NextPage<IProps> = ({ parkData, googleMapsKey }) => {
  return (
    <>
      <Head>
        <title>Outdoor Adventures</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="fixed h-full w-full">
        <Image
          alt=""
          layout="fill"
          objectFit="cover"
          className="fixed h-full w-full"
          src="/images/cliffsAndRoadMin.jpg"
        />
      </div>
      <div className="flex bg-slate-50/90 relative z-10">
        <ParkPageNav />
        <main className="flex-1 px-4 md:pt-10 pb-10 pt-14 mx-auto">
          <h1 className="text-center mb-4 text-4xl font-semibold">{parkData.fullName}</h1>

          <ParkInfoSection id="description" title="Description">
            <p className="font-light">{parkData.description}</p>
          </ParkInfoSection>

          <ParkInfoSection id="entrance-fees" title="Entrance Fees">
            <ul>
              {parkData.entranceFees.map((fee) => {
                return (
                  <li key={uuidv4()} className="mb-4">
                    <h4 className="font-bold">
                      {fee.title} <span className="italic">${fee.cost}</span>
                    </h4>
                    <p className="font-light">{fee.description}</p>
                  </li>
                );
              })}
            </ul>
          </ParkInfoSection>

          <ParkHours operatingHours={parkData.operatingHours} />

          <Activities activities={parkData.activities} />

          <ParkInfoSection id="location" title="Location">
            <Map
              googleMapsKey={googleMapsKey}
              lat={parseFloat(parkData.latitude)}
              lng={parseFloat(parkData.longitude)}
            />
          </ParkInfoSection>

          <Contact contacts={parkData.contacts} url={parkData.url} />
          <Photos images={parkData.images} />
        </main>
      </div>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const parkCode = context?.params?.parkcode;

  if (typeof parkCode !== 'string') {
    return {
      props: {
        parkData: null,
      }, // will be passed to the page component as props
    };
  }

  try {
    const { data } = await axios.get<IParkDataResponse>(
      `https://developer.nps.gov/api/v1/parks?parkCode=${parkCode}&api_key=${process.env.NATIONAL_PARKS_APIKEY}`,
    );

    return {
      props: {
        parkData: data.data[0],
        googleMapsKey: process.env.GOOGLE_MAPS_APIKEY,
      }, // will be passed to the page component as props
    };
  } catch (err) {
    return {
      props: {
        parkData: null,
      }, // will be passed to the page component as props
    };
  }
};

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: 'blocking',
  };
}

// # const { data } = await axios.get(
//   #   `https://developer.nps.gov/api/v1/parks?parkCode=${parkCode}&api_key=${process.env.NATIONAL_PARKS_APIKEY}`,
//   # );
export default ParkPage;
